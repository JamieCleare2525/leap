%ul.breadcrumb
  %li
    = render "layouts/admin_menu"
    %span.divider /
  %li Settings

= form_for :settings, :html => {:class => "form-horizontal", :id => "admin-settings-form"} do

  %h2 Administration

  .control-group
    %label.control-label Admin Users
    .controls
      = text_field_tag "admin_users", Settings.admin_users
  :coffeescript
    $("#admin_users").tokenInput "/people/select", 
      prePopulate : #{Settings.admin_users.map{|p| Person.find(p)}.map{|p| {:id => p.id, :name => p.name, :readonly => (p == @user)}}.to_json}

  .control-group
    %label.control-label Home Page Advert Box
    .controls
      = text_area_tag "advert_box_html", Settings.advert_box_html

  %h2 BKSB
  .well
    If you enter correct BKSB settings here, then BKSB results can be automatically imported for users. Leave these
    blank to disable this.
  .alert.alert-warning
    You may need to restart Leap for these settings to take effect.
  .control-group
    %label.control-label BKSB URL
    .controls
      .input-prepend<
        %span.add-on http://
        = text_field_tag "bksb_url", Settings.bksb_url
  .control-group
    %label.control-label BKSB API Password
    .controls
      .input-prepend<
        %span.add-on
          %i.icon-lock
        = password_field_tag "bksb_pwd", Settings.bksb_pwd
  .control-group
    %label.control-label BKSB IIS Username
    .controls
      .input-prepend<
        %span.add-on
          %i.icon-user
        = text_field_tag "bksb_iis_username", Settings.bksb_iis_username
  .control-group
    %label.control-label BKSB IIS Password
    .controls
      .input-prepend<
        %span.add-on
          %i.icon-lock
        = password_field_tag "bksb_iis_pwd", Settings.bksb_iis_pwd

  %h2 Event Notes
  .well
    %p
      Event notes are notes which can be added to any event. They can be seen by anyone who can see the parent event attached to the
      events as children with a datestamp instead of a title.  This setting affects who can add the notes:
      %dl
        %dt Off
        %dd No-one can add notes; the feature is disabled
        %dt Staff
        %dd Only staff users can add notes
        %dt Students
        %dd 
          Staff <em>and</em> students can add notes. Remember to add <tt>event_notes</tt> to the <strong>student_create_events</strong>
          option or the create will fail.
  .control-group
    %label.control-label Who can add event notes
    .controls
      = select_tag "event_notes", options_for_select(["off","staff","students"], Settings.event_notes)

  %h2 Pathways
  .control-group
    %label.control-label Pathway choices
    .controls
      = text_area_tag "pathways", Settings.pathways

  %h2 Quick Quals on Entry Input
  .well
    %p
      These are comma separated lists for each of the fields in the Quick Quals on Entry input control. There's three ways of using it, you
      can choose which with the "Selection Type" setting.
      %dl
        %dt Buttons
        %dd 
          The lists become a column of buttons below each field which, when pressed, will load that text into the input box. 
          This is quick for bulk input and also still allows arbitrary entries.
        %dt Select
        %dd 
          Standard drop-down selections. To allow arbitrary input, add an option "OTHER"; when this is selected
          select box will be replaced with a text field          
        %dt None
        %dd Ignores the lists and just shows text boxes.
      

  .control-group
    %label.control-label Selection Type
    .controls
      = select_tag "qqoe_select_type", options_for_select(["Select","Button","None"], Settings.qqoe_select_type)
  .control-group
    %label.control-label Qualification Types
    .controls
      = text_area_tag "qqoe_qual_type", Settings.qqoe_qual_type
  .control-group
    %label.control-label Awarding Bodies
    .controls
      = text_area_tag "qqoe_awarding_body", Settings.qqoe_awarding_body
  .control-group
    %label.control-label Subjects
    .controls
      = text_area_tag "qqoe_subject", Settings.qqoe_subject
  .control-group
    %label.control-label Grades
    .controls
      = text_area_tag "qqoe_grade", Settings.qqoe_grade

  %h2 Reviews

  %h3 Score Titles
  .well Select the labels used for the four scoring categories on Reviews
  .control-group
    %label.control-label Quality
    .controls
      = text_field_tag "review_cat_quality", Settings.review_cat_quality
  .control-group
    %label.control-label Punctuality
    .controls
      = text_field_tag "review_cat_punctuality", Settings.review_cat_punctuality
  .control-group
    %label.control-label Attitude
    .controls
      = text_field_tag "review_cat_attitude", Settings.review_cat_attitude
  .control-group
    %label.control-label Completion
    .controls
      = text_field_tag "review_cat_completion", Settings.review_cat_completion

  %h4 Grades
  .control-group
    %label.control-label Review Grades
    .controls
      = text_field_tag "review_grades", Settings.review_grades
      .help-text Comma separated list of the selection of grades you can choose for reviews. May break old grades horrifically.
  .control-group
    %label.control-label Grade order
    .controls
      = select_tag "reverse_scores", options_for_select(["Forward","Reverse"],Settings.reverse_scores)
      .help-text Show review grades in forward or reverse order


  %h3 Windows
  .control-group
    %label.control-label Open Review Windows
    .controls
      = text_field_tag "review_windows", Settings.review_windows
      .help-text Comma-seperated list of windows allowed to be selected from the dropdown when creating reviews
  .control-group
    %label.control-label Current Review Window
    .controls
      = select_tag "current_review_window", options_for_select(Settings.review_windows.split(","),Settings.current_review_window), :include_blank => "No current window"
      .help-text 
        Which of the review-windows to show on the group print on course pages. You'll have to save changes to the
        list of windows before you can select one here.


  %h2 Simple Poll
  .well
    Select the poll to be displayed on users' home pages. If blank, the HTML from the "Home Page Advert Box" setting will be displayed.
  .control-group
    %label.control-label Current Simple Poll
    .controls
      = select_tag "current_simple_poll", options_from_collection_for_select(SimplePoll.all,:id,:question,Settings.current_simple_poll), 
                   :include_blank => "** NO POLL **"

  %h2 Unusual
  .well
    Some options you may not want to use. Some of them do have uses other than my own amusement. These uses may not be obvious.
  .control-group
    %label.control-label Anonymised pictures
    .controls
      = select_tag "lorem_pictures", options_for_select(["abstract","animals","business","cats","city","food","nightlife",
                                                         "fashion","people","nature","sports","technics","transport"],
                                                        Settings.lorem_pictures), 
                    :include_blank => "Normal pictures"
      .help-text
        Leave blank to show users' photos or select a category to show random pictures from that category. I suggest "cats."

  %h1 Old Settings!
  .old-settings
    .alert
      I'll be working to move these into sections and to generally be easier to use over time :)
    - @settings2 = @settings - ["admin_users","advert_box_html","bksb_pwd","bksb_url","bksb_iis_username","bksb_iis_pwd",
                                 "qqoe_qual_type","qqoe_awarding_body","qqoe_subject","qqoe_grade","pathways",
                                 "qqoe_select_type","current_simple_poll","lorem_pictures","review_cat_quality",
                                 "review_cat_punctuality","review_cat_attitude","review_cat_completion","review_windows",
                                 "current_review_window","review_grades","reverse_scores","event_notes"]
    - @settings2.each do |setting|
      .control-group
        %label.control-label{:for => setting}= setting.humanize
        .controls= text_field_tag setting, Settings[setting]
    .form-actions
      = submit_tag "Save Changes", :class => "btn btn-primary"
