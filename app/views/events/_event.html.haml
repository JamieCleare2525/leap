= render :partial => "time_ruler" if event.first_in_past?
.row{:class => event_classes(event)}
  %ul.span10.header
    %li.icon= image_tag(event.icon_url, :size => "48x48")
    %li.event-date= event_date event
    //- if @multi
    //  %h1.event_person
    //    = link_to event.person do
    //      = image_tag("#{url_for(event.person)}.jpg", :size => "48x48")
    //      = event.person.name
    %li.title= raw special_title event.title
    - if event.subtitle
      %li.subtitle= raw special_title event.subtitle
    %li.body{:class => event.subtitle && "after-subtitle"}
      - begin
        = render :partial => "events/body/#{event.eventable_type.underscore}", :object => event.eventable, :locals => {:event => event}
      - rescue ActionView::MissingTemplate
        = raw event_format(event.body)
      - rescue 
        .alert.alert-error
          %b An error occurred.
          = $!
          
    %li.controls
      = extend_event_button event
      = delete_event_button event if event.is_deletable?
    - begin
      .row
        .long-body.span10= render :partial => "events/long_body/#{event.eventable_type.underscore}", :object => event.eventable, :locals => {:event => event}
    - rescue ActionView::MissingTemplate
      -#long_body 
  - event.children.each do |child|
    .row
      .span10= render :partial => "events/mini", :object => child, :as => "event"
  .row
    .extended.span10{:style => "display:none"}

- if request.xhr?
  .row.alert.alert-success
    %button{:class => "close", "data-dismiss" => "alert"}Ã—
    %b
      = event.eventable_type.humanize
      updated
