= render :partial => "time_ruler" if event.first_in_past?
%div{:style => defined?(hidden) && 'none',:class => [event.status, @multi || event.about_person ? "multi" : "single"]}[event]
  %div.inner[event.eventable]
    %header{:class => event.subtitle ? "subtitle" : nil}
      %h2.icon= image_tag(event.icon_url, :size => "48x48", :alt => event.eventable_type, :title => event.eventable_type)
      %time{:datetime => event.event_date.strftime("%Y-%m-%dT%H:%M:%S%z")}
        %h2.date= pretty_date event.event_date
        .time= pretty_time event.event_date
      - if @multi
        %h1.event_person
          = link_to event.person do
            = image_tag("#{url_for(event.person)}.jpg", :size => "48x48")
            = event.person.name
      - elsif event.about_person
        %h1.event_person
          = image_tag("#{url_for(event.about_person)}.jpg", :size => "48x48")
          = event.about_person.name
      %h1= raw special_title event.title
      - if event.subtitle
        %h2= raw special_title event.subtitle
    - begin
      .body= render :partial => "events/body/#{event.eventable_type.underscore}", :object => event.eventable, :locals => {:event => event}
    - rescue
      .body= raw event_format(event.body)
    - if Time.now - 1.hour < event.eventable.created_at and @user == event.eventable.created_by
      .buttons_delete
        .delete_target
          = link_to image_tag("events/delete_event.png"), person_event_url(@topic, event), :method => :delete, :confirm => "Are you sure?"
    .buttons
      = link_to image_tag("actions/event_open.png"), open_extended_event_url(event,:person_id => event.person.mis_id), :remote => true, :class => "extend_button", :observer => "false"
      = image_tag "actions/event_opened.png", :class => "close_extend_button", :style => "display:none", :observer => "false"      
    - begin
      .long_body= render :partial => "events/long_body/#{event.eventable_type.underscore}", :object => event.eventable, :locals => {:event => event}
    - rescue
      -#long_body 
    .attachments
      .inner
        = render :partial => "events/mini", :collection => event.children.unique_eventable.order("event_date"), :as => :event
    .extended{:style => "display:none"}
      .inner
